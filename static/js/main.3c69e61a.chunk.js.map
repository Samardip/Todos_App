{"version":3,"sources":["AllFiles.js","App.js","reportWebVitals.js","index.js"],"names":["AllFiles","useState","name","setName","education","setEducation","gender","setGender","desc","setDesc","editItem","setEditItem","sno","data","setData","updateRow","selectedRow","document","getElementById","addEventListener","detail","console","log","tables1","map","Elm","onSubmit","e","preventDefault","details","length","tables","type","value","onChange","target","id","placeholder","onClick","rows","cols","className","scope","props","list","filter","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3c69e61a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AllFiles = () => {\r\n    const [name, setName] = useState(\"\");\r\n        const [education, setEducation] = useState(\"\");\r\n        const [gender, setGender] = useState(\"\");\r\n        const [desc, setDesc] = useState(\"\");\r\n        const[editItem,setEditItem]=useState([]);\r\n    const tables = (name, education, gender, desc) => {\r\n        // console.log(name,education,gender,desc);\r\n\r\n        let sno = data[data.length - 1].sno + 1;\r\n        //console.log(sno);\r\n        const details = {\r\n            sno: sno,\r\n            name: name,\r\n            education: education,\r\n            gender: gender,\r\n            desc: desc\r\n        }\r\n        setData([...data, details]);\r\n        setEditItem([details]);\r\n    }\r\n\r\n    const [data, setData] = useState([\r\n        {\r\n            sno: 1,\r\n            name: \"s\",\r\n            education: \"s\",\r\n            gender: \"s\",\r\n            desc: \"s\"\r\n        },\r\n        {\r\n            sno: 2,\r\n            name: \"s1\",\r\n            education: \"s1\",\r\n            gender: \"s1\",\r\n            desc: \"s1\"\r\n        },\r\n    ]);\r\n    \r\n        \r\n        const submit = (e) => {\r\n            e.preventDefault();\r\n            tables(name, education, gender, desc);\r\n            // console.log(name, education, gender, desc);\r\n        };\r\n        const updateRow=(selectedRow)=>{\r\n            //console.log(selectedRow.name);\r\n            setName(selectedRow.name);\r\n            setEducation(selectedRow.education);\r\n            setGender(selectedRow.gender);\r\n            setDesc(selectedRow.desc);\r\n            const tables1 = (name, education, gender, desc) => {\r\n                // console.log(name,education,gender,desc);\r\n        \r\n                //let sno1 = data[data.length - 1].sno + 1;\r\n                //console.log(sno);\r\n                const detail = {\r\n                    sno: selectedRow.sno,\r\n                    name: name,\r\n                    education: education,\r\n                    gender: gender,\r\n                    desc: desc\r\n                }\r\n                setEditItem(detail);\r\n                console.log(detail);\r\n            }\r\n            \r\n            //console.log(name);\r\n            // let detail=2;\r\n            \r\n                document.getElementById(\"update_list\").addEventListener('click',()=>{\r\n                    tables1(name,education,gender,desc);\r\n                   setData(data.map((Elm)=>{\r\n                        if(Elm.sno===selectedRow.sno){\r\n                            \r\n                            console.log(editItem);\r\n                            return editItem;\r\n                        }\r\n                        else\r\n                            return Elm;\r\n                    }));\r\n                //    let i=0;\r\n                // data.filter((e)=>{\r\n                //     i++;\r\n                //     if((data.length+1)!==i){\r\n                //     if(e.sno==detail)\r\n                //         return data[data.length+1];\r\n                //     else\r\n                //         return e;\r\n                //     }\r\n                //     else\r\n                //     return null;\r\n                // })\r\n                    \r\n                        \r\n                    \r\n\r\n                \r\n                \r\n                    \r\n                    \r\n               // console.log(editItem);\r\n                \r\n            });\r\n            //console.log(data[data.length-1]);\r\n        }\r\n        const deleteRow = (list) => {\r\n            //console.log(list);\r\n            \r\n            setData(data.filter((e) => {\r\n                return (e !== list)\r\n            }).filter((rows, i) => {\r\n                return rows.sno = i + 1;\r\n            }))\r\n    \r\n        }\r\n        return (\r\n            <>\r\n\r\n\r\n                <form onSubmit={submit}>\r\n                    <table>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Education</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={education}\r\n                                    onChange={(e) => setEducation(e.target.value)}\r\n                                    id=\"education\"\r\n                                    placeholder=\"Enter education\"\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    value=\"Male\"\r\n                                    onClick={(e) => setGender(e.target.value)}\r\n                                    name=\"gender\"\r\n                                    id=\"male\"\r\n                                />\r\n                                Male\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    value=\"Female\"\r\n                                    onClick={(e) => setGender(e.target.value)}\r\n                                    name=\"gender\"\r\n                                    id=\"female\"\r\n                                />\r\n                                Female\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Description</td>\r\n                            <td>\r\n                                <textarea\r\n                                    id=\"description\"\r\n                                    value={desc}\r\n                                    onChange={(e) => setDesc(e.target.value)}\r\n                                    rows=\"5\"\r\n                                    cols=\"23\"\r\n                                ></textarea>\r\n                            </td>\r\n                        </tr>\r\n                        <td>\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary mx-2\"\r\n                                id=\"add\"\r\n                                value=\"ADD\"\r\n                            />\r\n                            <button className=\" btn btn-warning\" id=\"update_list\">Update List</button>\r\n                        </td>\r\n                        \r\n                        \r\n                    </table>\r\n                </form>\r\n                \r\n\r\n\r\n\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">id</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Education</th>\r\n                            <th scope=\"col\">Gender</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">update</th>\r\n                            <th scope=\"col\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">#</th>\r\n                            <td>ADD Name</td>\r\n                            <td>ADD Education</td>\r\n                            <td>ADD Gender</td>\r\n                            <td>ADD Description</td>\r\n                            <td>\r\n                                <button className=\"btn btn-success\">Update</button>\r\n                            </td>\r\n                            <td>\r\n                                <button className=\"btn btn-danger\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                        {data.map((props) => {\r\n                            return (\r\n                                <>\r\n                                    <tr>\r\n                                        <th scope=\"row\">{props.sno} </th>\r\n                                        <td>{props.name}</td>\r\n                                        <td>{props.education}</td>\r\n                                        <td>{props.gender}</td>\r\n                                        <td>{props.desc}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-success\" onClick={() => updateRow(props)}>Update</button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-danger\" onClick={() => deleteRow(props)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n","import React, { useState } from \"react\";\n// import { ShowTable } from \"./Add/ShowTable\";\n// import {Tables} from \"./Add/Tables\";\n// import { UpdateTable } from \"./Add/UpdateTable\";\nimport { AllFiles } from \"./AllFiles\";\nfunction App() {\n  \n// const tables = (name, education, gender, desc) => {\n//   // console.log(name,education,gender,desc);\n\n//   let sno = data[data.length - 1].sno + 1;\n//   //console.log(sno);\n//   const details = {\n//     sno: sno,\n//     name: name,\n//     education: education,\n//     gender: gender,\n//     desc: desc\n//   }\n//   setData([...data, details]);\n// }\n\n// const [data, setData] = useState([\n//   {\n//     sno: 1,\n//     name: \"s\",\n//     education: \"s\",\n//     gender: \"s\",\n//     desc: \"s\"\n//   },\n//   {\n//     sno: 2,\n//     name: \"s1\",\n//     education: \"s1\",\n//     gender: \"s1\",\n//     desc: \"s1\"\n//   },\n// ]);\n// const updateRow=(rowdata)=>{\n// const [updateR,setUpdateR] = useState(rowData.sno);\n// }\n// const deleteRow = (list) => {\n//   //console.log(list);\n//   setData(data.filter((e) => {\n//     return (e !== list)\n//   }).filter((rows, i) => {\n//     return rows.sno = i + 1;\n//   }))\n// }\nreturn (\n  <>\n  <AllFiles />\n    {/* <Tables tables={tables} />\n    <ShowTable data={data} deleteRow={deleteRow} updateRow={updateRow} />\n    <UpdateTable data={data} updateRow={updateRow}/> */}\n  </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}